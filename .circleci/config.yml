# https://circleci.com/developer/orbs/orb/circleci/node
# https://circleci.com/developer/orbs/orb/circleci/gradle
# https://flexpoint.tech/2017/08/29/using-oracles-jdk-in-circleci-with-gradle/
# https://circleci.com/docs/2.0/language-java/

# https://medium.com/tarmac/continuous-delivery-to-test-flight-with-ionic-and-cordova-on-circleci-without-fastlane-58447324f38a

# https://github.com/ngx-rocket/generator-ngx-rocket/issues/162
# https://github.com/ngx-rocket/generator-ngx-rocket/pull/364/commits/b41a54eb3a465ffe4767412971ec99a7c2ddaf23
# https://github.com/ngx-rocket/circleci-dockerfiles/blob/master/cordova/images/Dockerfile
# Runs in /home/circleci/project
version: 2.1

orbs:
  node: circleci/node@4.1.0
  android: circleci/android@0.2.3
  gradle: circleci/gradle@2.2.0

workflows:
  version: 2
  android:
    jobs:
      - build-and-deploy-android:
          filters:
            branches:
              only:
                - app

jobs:
  build-and-deploy-android:  
    #executor: node/default
    executor:
      name: android/android
      sdk-version: '28'
    docker:
###      - image: circleci/android:api-28
      - image: circleci/android:api-24-alpha # brings in suitably old openjdk
##      - image: circleci/jdk8:0.1.1
    environment:
###      JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64
###      ANDROID_HOME: /usr/local/android-sdk-linux
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3g
      _JAVA_OPTIONS: "-Xmx3g"
      TERM: dumb
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
    steps:
      # Checkout the code as the first step.
##      - run: sudo apt update
##      - run: sudo apt install -y curl git openssl tar
      - checkout
##      - run: sudo curl -sL https://deb.nodesource.com/setup_12.x -o nodesource_setup.sh
##      - run: sudo sh ./nodesource_setup.sh
##      - run: sudo apt install -y nodejs
      #- run: ./gradlew dependencies
      - android/accept-licenses
##      - run: apt install node
      - run: sudo whereis gradlew
      - run: sudo whereis gradle
      #- run: find . name gradle*
      #- run: chmod +x gradlew
      #- run: git checkout app
      - node/install:
          lts: true
          #node-version: '12.20'
      - run: npm -v
##      - run: nodejs -v
      - run: node -v

##      - run: sudo npm install
##      - run: sudo npm install -g cordova@9.0.0
##      - run: sudo npm install -g rimraf
##      - run: sudo cordova -v
      - run: npm install
      - run: npm install -g cordova@9.0.0
      - run: npm install -g rimraf
      - run: cordova -v

      - run: openssl version; tar --version; java -version
      #- run: cd mobile; openssl enc -aes-256-cbc -md sha512 -pbkdf2 -iter 100000 -salt -d -in circleci-secrets.tar.enc -out circleci-secrets.tar -k $CIRCLE_TAR_PWD
      - run: cd mobile; openssl enc -aes-256-cbc -md sha512 -salt -d -in circleci-secrets.tar.enc -out circleci-secrets.tar -k $CIRCLE_TAR_PWD
##      - run: cd mobile; sudo tar -xvf circleci-secrets.tar --no-same-owner; ls -l secrets
      - run: cd mobile; tar -xvf circleci-secrets.tar --no-same-owner; ls -l secrets
      #- run: ./gradlew --version

      - run: sudo apt update
      - run: sudo apt-get install unzip
      - run: wget -O ~/gradle-5.4.1-bin.zip https://services.gradle.org/distributions/gradle-5.4.1-bin.zip
      - run: sudo mkdir /opt/gradle
      - run: sudo unzip -d /opt/gradle ~/gradle-5.4.1-bin.zip
      - run: sudo echo "export GRADLE_HOME=/opt/gradle/gradle-5.4.1" >> $BASH_ENV
      - run: sudo echo "export PATH=$GRADLE_HOME/bin:$PATH" >> $BASH_ENV
      - run: gradle -v
      


      # The next step will download the dependencies.
      # - run:
      #     name: Download Dependencies
      #     command: ./gradlew androidDependencies
      # Then lint and run your tests!
      # - run:
      #     name: Run Tests
      #     command: ./gradlew lint test

      - run: mkdir releases
      - run: npm run fdapp
      - run: pwd; ls -l mobile/freegle/scripts
      - run: mkdir ../iznik-nuxt-app
      - run: "cd ../iznik-nuxt-app; 
        ln -s ../project/mobile/freegle/android/config.xml config.xml;
        ln -s ../project/mobile/freegle/android/package.json package.json;
        ln -s ../project/mobile/freegle/icons icons;
        ln -s ../project/mobile/freegle/package-assets package-assets;
        ln -s ../project/mobile/freegle/scripts scripts;
        chmod +x scripts/before_build.sh;
        chmod +x scripts/remove_permissions.js;
        cp ../project/mobile/secrets/google-services.json google-services.json;
        ln -s ../project/dist www;
        cordova platform rm android;
        cordova platform add android@8.1.0
      "

      - run: echo $ANDROID_HOME
      - run: echo $JAVA_HOME
      # Build debug build
      - run: cd ../iznik-nuxt-app; cordova build --debug -- --keystore="../project/mobile/secrets/android-chrisphdcccom.new.keystore" --storePassword="$storepass" --password="$keypass" --alias="Freegle Ltd Chris"


