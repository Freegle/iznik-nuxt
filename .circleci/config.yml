# Android: runs in /home/circleci/project
# Apple: runs in /Users/distiller/project as user distiller
version: 2.1

orbs:
  node: circleci/node@4.1.0
  android: circleci/android@1.0.3

################
workflows:
  version: 2
  build-and-publish:
    jobs:
      #- hold: # Job needs approval to run
      #    type: approval      
      - build-and-publish-apple:
          filters:
            branches:
              only:
                - app-publish
      #    requires:
      #      - hold
      - build-and-publish-android:
          filters:
            branches:
              only:
                - app-publish
      #    requires:
      #      - hold

################
################ APPLE
jobs:
  build-and-publish-apple:
    macos:
      # https://circleci.com/docs/2.0/testing-ios/#supported-xcode-versions
      xcode: "13.0.0" # 11.3.1 12.4.0 13.2.1
    steps:
      - checkout
      - run: nvm list
      - node/install:
          lts: true # node 14.17.6 npm 6.14.15 for xcode:13.0.0
          #install-npm: false
          #node-version: "14.18.1"
          #npm-version: "7.6.1"
      - run: nvm list
      - run: nvm use 14.17.6; npm -v; node -v

      ################
      #- run:
      #    name: == Get ionic-plugin-deeplinks
      #    command: echo "Get ionic-plugin-deeplinks"
      #- run: cd ..;git clone https://github.com/Freegle/ionic-plugin-deeplinks.git

      ################
      - run:
          name: == Decrypt secrets and set up signing
          command: echo "Decrypt secrets"
      - run: openssl version; tar --version; java -version
      #- run: cd mobile; openssl enc -aes-256-cbc -md sha512 -pbkdf2 -iter 100000 -salt -d -in circleci-secrets.tar.enc -out circleci-secrets.tar -k $CIRCLE_TAR_PWD
      - run: cd mobile; openssl enc -aes-256-cbc -md sha512 -salt -d -in circleci-secrets.tar.enc -out circleci-secrets.tar -k $CIRCLE_TAR_PWD
      - run: cd mobile; tar -xvf circleci-secrets.tar --no-same-owner; ls -l secrets

      - run: chmod +x mobile/add-key.sh
      - run: ./mobile/add-key.sh

      ################
      - run:
          name: == Extract app version strings
          command: echo "Extract app version strings"
      - run: grep -o "MOBILE_VERSION = '[^']*'" nuxt.config.js | sed -e "s/.*MOBILE_VERSION = '//; s/'.*//" >MOBILE_VERSION.txt
      - run: echo "export MOBILE_VERSION=$(<MOBILE_VERSION.txt)" >> $BASH_ENV
      - run: echo $MOBILE_VERSION

      - run: grep -o "MODTOOLS_VERSION = '[^']*'" nuxt.config.js | sed -e "s/.*MODTOOLS_VERSION = '//; s/'.*//" >MODTOOLS_VERSION.txt
      - run: echo "export MODTOOLS_VERSION=$(<MODTOOLS_VERSION.txt)" >> $BASH_ENV
      - run: echo $MODTOOLS_VERSION

      - run: mkdir releases

################
      - run:
          name: == Install cordova and fix permissions
          command: echo "Install cordova and fix permissions"
      - run: nvm use 14.17.6; sudo npm install -g cordova@9.0.0 rimraf
      - run: nvm use 14.17.6; npm install

      # Permissions fixes to let cordova run OK - may not all be needed
      - run: mkdir -p ~/Library/Preferences/insight-nodejs
      - run: sudo chmod -R 777 ~/Library
      - run: sudo chmod -R 777 ~/.config
      - run: mkdir -p ~/.config/configstore
      - run: ls -l ~/.config/configstore

################
# FREEGLE app
      - run:
          name: == Make Freegle app debug and release builds and upload to iTunes
          command: echo "Make Freegle app"
      - run: nvm use 14.17.6; npm run fdapp

      - run: mkdir ../iznik-nuxt-app
      - run: cd ../iznik-nuxt-app; ln -s ../project/mobile/freegle/ios/config.xml config.xml
      - run: cd ../iznik-nuxt-app; ln -s ../project/mobile/freegle/ios/package.json package.json
      - run: cd ../iznik-nuxt-app; ln -s ../project/mobile/freegle/icons icons
      - run: cd ../iznik-nuxt-app; ln -s ../project/mobile/freegle/package-assets package-assets
      - run: cd ../iznik-nuxt-app; ln -s ../project/mobile/freegle/scripts scripts
      - run: cd ../iznik-nuxt-app; cp ../project/mobile/secrets/GoogleService-Info.plist GoogleService-Info.plist
      - run: cd ../iznik-nuxt-app; ln -s ../project/dist www

      - run: cd ../iznik-nuxt-app; nvm use 14.17.6; cordova platform rm ios
      - run: cd ../iznik-nuxt-app; nvm use 14.17.6; cordova platform add ios@6.2.0

      # Fix cordova-ios
      - run: cd ../iznik-nuxt-app; sed -i '' "s/PROVISIONING_PROFILE =/PROVISIONING_PROFILE_SPECIFIER =/" platforms/ios/cordova/lib/build.js

      # Build debug build
      - run: cd ../iznik-nuxt-app; nvm use 14.17.6; cordova build --debug --device --codeSignIdentity="iPhone Distribution" --developmentTeam="$iosDeveloper" --packageType="ad-hoc" --automaticProvisioning="false" --provisioningProfile="Freegle adhoc 0322" >buildlogdebug.txt
      - run: cd ../iznik-nuxt-app; tail -n 5 buildlogdebug.txt
      - run: cd ../iznik-nuxt-app; cp platforms/ios/build/device/Freegle.ipa ../project/releases/Freegle-ios-app-$MOBILE_VERSION-debug-$(date +'%Y%m%d%H%M%S').ipa

      # Build release build and publish
      - run: cd ../iznik-nuxt-app; nvm use 14.17.6; cordova build --release --device --codeSignIdentity="iPhone Distribution" --developmentTeam="$iosDeveloper" --packageType="app-store" --automaticProvisioning="false" --provisioningProfile="Freegle 0322"  >buildlogrelease.txt
      - run: cd ../iznik-nuxt-app; tail -n 5 buildlogrelease.txt
      - run: cd ../iznik-nuxt-app; cp platforms/ios/build/device/Freegle.ipa ../project/releases/Freegle-ios-app-$MOBILE_VERSION-release-$(date +'%Y%m%d%H%M%S').ipa
      - run: cd ../iznik-nuxt-app; xcrun altool --upload-app --type ios --file "platforms/ios/build/device/Freegle.ipa" --username $AppleUserId --password "$AppleAppSpecificPwd" || true

################
# MODTOOLS app
      - run:
          name: == Make ModTools app debug and release builds and upload to iTunes
          command: echo "Make ModTools app"
      - run: nvm use 14.17.6; npm run mtapp
      - run: mkdir ../iznik-nuxt-mt
      - run: cd ../iznik-nuxt-mt; ln -s ../project/mobile/modtools/ios/config.xml config.xml
      - run: cd ../iznik-nuxt-mt; ln -s ../project/mobile/modtools/ios/package.json package.json
      - run: cd ../iznik-nuxt-mt; ln -s ../project/mobile/modtools/icons icons
      - run: cd ../iznik-nuxt-mt; ln -s ../project/mobile/modtools/package-assets package-assets
      - run: cd ../iznik-nuxt-mt; ln -s ../project/mobile/modtools/scripts scripts
      - run: cd ../iznik-nuxt-mt; cp ../project/mobile/secrets/GoogleService-Info.plist GoogleService-Info.plist
      - run: cd ../iznik-nuxt-mt; ln -s ../project/dist www
      - run: cd ../iznik-nuxt-mt; nvm use 14.17.6; cordova platform rm ios
      - run: cd ../iznik-nuxt-mt; nvm use 14.17.6; cordova platform add ios@6.2.0

      # Fix cordova-ios
      - run: cd ../iznik-nuxt-mt; sed -i '' "s/PROVISIONING_PROFILE =/PROVISIONING_PROFILE_SPECIFIER =/" platforms/ios/cordova/lib/build.js

      # Build debug build
      - run: cd ../iznik-nuxt-mt; nvm use 14.17.6; cordova build --debug --device --codeSignIdentity="iPhone Distribution" --developmentTeam="$iosDeveloper" --packageType="ad-hoc" --automaticProvisioning="false" --provisioningProfile="Modtools adhoc 0322" >buildlogdebug.txt
      - run: cd ../iznik-nuxt-mt; tail -n 5 buildlogdebug.txt
      - run: cd ../iznik-nuxt-mt; cp platforms/ios/build/device/ModTools.ipa ../project/releases/ModTools-ios-app-$MODTOOLS_VERSION-debug-$(date +'%Y%m%d%H%M%S').ipa

      # Build release build and publish
      - run: cd ../iznik-nuxt-mt; nvm use 14.17.6; cordova build --release --device --codeSignIdentity="iPhone Distribution" --developmentTeam="$iosDeveloper" --packageType="app-store" --automaticProvisioning="false" --provisioningProfile="ModTools 0322"  >buildlogrelease.txt
      - run: cd ../iznik-nuxt-mt; tail -n 5 buildlogrelease.txt
      - run: cd ../iznik-nuxt-mt; cp platforms/ios/build/device/ModTools.ipa ../project/releases/ModTools-ios-app-$MODTOOLS_VERSION-release-$(date +'%Y%m%d%H%M%S').ipa
      - run: cd ../iznik-nuxt-mt; xcrun altool --upload-app --type ios --file "platforms/ios/build/device/ModTools.ipa" --username $AppleUserId --password "$AppleAppSpecificPwd" || true

################
# UPLOAD TO GITHUB AS NEW TAGGED RELEASE
      - run:
          name: == Upload created ipas as a tagged github release
          command: echo "Upload to github"
      - run: git config --local user.name "$gitusername"
      - run: git config --local user.email "$gitemail"
      - run: echo "export CIRCLECI_TAG=circleci-ios-builds-fd$MOBILE_VERSION-mt$MODTOOLS_VERSION-$(date +'%Y%m%d%H%M%S')-$(git log --format=%h -1)" >> $BASH_ENV
      - run: echo $CIRCLECI_TAG
      - run: git tag $CIRCLECI_TAG

      - run: brew install ghr

      - run: ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLECI_TAG} ./releases/

################
# STORE RELEASE IN CIRCLE-CI ARTIFACTS
      - run:
          name: == Store built ipas as circle-ci artifacts
          command: echo "Store as circle-ci artifacts"
      - store_artifacts:
          path: ./releases

################
################ ANDROID

  build-and-publish-android:  
    #executor: node/default
    executor:
      #name: android/android
      name: android/android-machine # https://circleci.com/docs/2.0/android-machine-image/ 5/8/21:  android 23-30, gradle 6.8.3 npm 7.6.1 node v14.16.0
      resource-class: medium
    environment:
      # JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64
      # ANDROID_HOME: /usr/local/android-sdk-linux
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3g
      _JAVA_OPTIONS: "-Xmx3g"
      TERM: dumb
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
    steps:
      - run:
          name: == Install
          command: echo "Install"
      - checkout
      - android/accept-licenses
      - run: npm -v; node -v # OK: 7.5.2 v14.15.4  # 6.14.11 v14.15.4 # Seems OK: 7.10.0 14.16.1 # npm 7.6.1 node v14.16.0

      - run: npm install
      - run: npm install -g cordova rimraf # @10.0.0
      - run: cordova -v

################
      # Need to run our fixed fork of ionic-plugin-deeplinks
      #- run:
      #    name: == Get ionic-plugin-deeplinks
      #    command: echo "Get ionic-plugin-deeplinks"
      #- run: cd ..;git clone https://github.com/Freegle/ionic-plugin-deeplinks.git

################
      - run:
          name: == Decrypt secrets 
          command: echo "Decrypt secrets"
      - run: sudo apt update
      - run: openssl version; tar --version; java -version
      #- run: cd mobile; openssl enc -aes-256-cbc -md sha512 -pbkdf2 -iter 100000 -salt -d -in circleci-secrets.tar.enc -out circleci-secrets.tar -k $CIRCLE_TAR_PWD
      - run: cd mobile; openssl enc -aes-256-cbc -md sha512 -salt -d -in circleci-secrets.tar.enc -out circleci-secrets.tar -k $CIRCLE_TAR_PWD
      - run: cd mobile; tar -xvf circleci-secrets.tar --no-same-owner; ls -l secrets

################
      - run: gradle -v # 6.8.3
      
################
      - run:
          name: == Extract app version strings
          command: echo "Extract app version strings"
      - run: grep -o "MOBILE_VERSION = '[^']*'" nuxt.config.js | sed -e "s/.*MOBILE_VERSION = '//; s/'.*//" >MOBILE_VERSION.txt
      - run: echo "export MOBILE_VERSION=$(<MOBILE_VERSION.txt)" >> $BASH_ENV
      #- run: echo $MOBILE_VERSION
      - run: grep -o "MODTOOLS_VERSION = '[^']*'" nuxt.config.js | sed -e "s/.*MODTOOLS_VERSION = '//; s/'.*//" >MODTOOLS_VERSION.txt
      - run: echo "export MODTOOLS_VERSION=$(<MODTOOLS_VERSION.txt)" >> $BASH_ENV
      #- run: echo $MODTOOLS_VERSION

      - run: mkdir releases
################
# FREEGLE APP
      - run:
          name: == Make Freegle app debug and release builds and upload to Google Play beta
          command: echo "Make Freegle app"
      - run: npm run fdapp
      - run: pwd; ls -l mobile/freegle/scripts
      - run: mkdir ../iznik-nuxt-app
      - run: "cd ../iznik-nuxt-app; 
        ln -s ../project/mobile/freegle/android/config.xml config.xml;
        ln -s ../project/mobile/freegle/android/package.json package.json;
        ln -s ../project/mobile/freegle/icons icons;
        ln -s ../project/mobile/freegle/package-assets package-assets;
        ln -s ../project/mobile/freegle/scripts scripts;
        chmod +x scripts/before_build.sh;
        chmod +x scripts/remove_permissions.js;
        cp ../project/mobile/secrets/google-services.json google-services.json;
        cp ../project/mobile/freegle/alert.mp3 alert.mp3;
        ln -s ../project/dist www;
        cordova platform rm android;
        cordova platform add android@10.1.0
      "

      - run: echo $ANDROID_HOME
      - run: echo $JAVA_HOME
      # Build debug build
      - run: cd ../iznik-nuxt-app; cordova build --debug -- --keystore="../project/mobile/secrets/android-chrisphdcccom.new.keystore" --storePassword="$storepass" --password="$keypass" --alias="Freegle Ltd Chris"
      - run: cd ../iznik-nuxt-app; cp platforms/android/app/build/outputs/apk/debug/app-debug.apk ../project/releases/Freegle-android-app-$MOBILE_VERSION-debug-$(date +'%Y%m%d%H%M%S').apk

      # Build release build
      - run: cd ../iznik-nuxt-app; cordova build --release -- --packageType apk --keystore="../project/mobile/secrets/android-chrisphdcccom.new.keystore" --storePassword="$storepass" --password="$keypass" --alias="Freegle Ltd Chris"
      - run: cd ../iznik-nuxt-app; cp platforms/android/app/build/outputs/apk/release/app-release.apk ../project/releases/Freegle-android-app-$MOBILE_VERSION-release-$(date +'%Y%m%d%H%M%S').apk
      #- run: cd ../iznik-nuxt-app; cp platforms/android/app/build/outputs/bundle/release/app-release.aab ../project/releases/Freegle-android-app-$MOBILE_VERSION-release-$(date +'%Y%m%d%H%M%S').aab

      - run: ls -l releases

      # Publish to Google Play beta track. NOT WORKING since upgrade to cordova-android 10.x and new circleci build environment
      # https://haseebmajid.dev/blog/auto-publish-react-native-to-android-store-with-gitlab-ci
      # https://plugins.gradle.org/plugin/com.github.triplet.play Version 3 doesn't seem to work
      # https://github.com/Triple-T/gradle-play-publisher
      # https://plugins.gradle.org/m2/com/github/triplet/gradle/play-publisher/2.8.1/
      # gradle-play-publisher 3.6.0 needs Gradle 7.x
      #                       3.5.0              4.2.x
      #                       3.0-3.4            4.1.x
      #                       2.8.0              6.5
      #                       ...
      # previous build:       2.0.0-rc1          used 5.4.1

      - run: cd ../iznik-nuxt-app; cat platforms/android/repositories.gradle
      - run: cd ../iznik-nuxt-app; sed -i "/mavenCentral/amaven { url 'https://plugins.gradle.org/m2/' }" platforms/android/repositories.gradle
      - run: cd ../iznik-nuxt-app; cat platforms/android/repositories.gradle
      #- run: cd ../iznik-nuxt-app; cat platforms/android/app/repositories.gradle
      #- run: cd ../iznik-nuxt-app; sed -i "/mavenCentral/amaven { url 'https://plugins.gradle.org/m2/' }" platforms/android/app/repositories.gradle
      #- run: cd ../iznik-nuxt-app; cat platforms/android/app/repositories.gradle
      - run: cd ../iznik-nuxt-app; cat platforms/android/app/build.gradle
      - run: cd ../iznik-nuxt-app; sed -i "/AGP_VERSION/aclasspath 'com.github.triplet.gradle:play-publisher:2.8.1'" platforms/android/app/build.gradle
      - run: cd ../iznik-nuxt-app; cat platforms/android/app/build.gradle
      #- run: cd ../iznik-nuxt-app; cat platforms/android/build.gradle
      #- run: cd ../iznik-nuxt-app; sed -i "/KOTLIN_VERSION/aclasspath 'com.github.triplet.gradle:play-publisher:2.8.1'" platforms/android/build.gradle
      #- run: cd ../iznik-nuxt-app; cat platforms/android/build.gradle
      - run: cd ../iznik-nuxt-app; cp ../project/mobile/build-extras.gradle platforms/android/app
      - run: cd ../iznik-nuxt-app; cat platforms/android/app/build-extras.gradle
      - run: cd ../iznik-nuxt-app; cp ../project/mobile/secrets/api-freegle-google-play-deployment.json platforms/android/app
      - run: cd ../iznik-nuxt-app/platforms/android; gradle publishReleaseApk --info || true # Ignore errors ie if versionCode already submitted
      #- run: cd ../iznik-nuxt-app/platforms/android; gradle publishBundle --info || true # Ignore errors ie if versionCode already submitted

################
# MODTOOLS APP
      - run:
          name: == Make ModTools app debug and release builds and upload to Google Play beta
          command: echo "Make ModTools app"
      - run: npm run mtapp
      - run: pwd; ls -l mobile/modtools/scripts
      - run: mkdir ../iznik-nuxt-mt
      - run: "cd ../iznik-nuxt-mt; 
        ln -s ../project/mobile/modtools/android/config.xml config.xml;
        ln -s ../project/mobile/modtools/android/package.json package.json;
        ln -s ../project/mobile/modtools/icons icons;
        ln -s ../project/mobile/modtools/package-assets package-assets;
        ln -s ../project/mobile/modtools/scripts scripts;
        chmod +x scripts/before_build.sh;
        cp ../project/mobile/secrets/google-services.json google-services.json;
        cp ../project/mobile/modtools/alert.mp3 alert.mp3;
        ln -s ../project/dist www;
        cordova platform rm android;
        cordova platform add android@10.1.0
      "

      - run: echo $ANDROID_HOME
      - run: echo $JAVA_HOME
      # Build debug build
      - run: cd ../iznik-nuxt-mt; cordova build --debug -- --keystore="../project/mobile/secrets/android-chrisphdcccom.new.keystore" --storePassword="$storepass" --password="$keypass" --alias="Freegle Ltd Chris"
      - run: cd ../iznik-nuxt-mt; cp platforms/android/app/build/outputs/apk/debug/app-debug.apk ../project/releases/ModTools-android-app-$MODTOOLS_VERSION-debug-$(date +'%Y%m%d%H%M%S').apk

      # Build release build
      - run: cd ../iznik-nuxt-mt; cordova build --release -- --packageType apk --keystore="../project/mobile/secrets/android-chrisphdcccom.new.keystore" --storePassword="$storepass" --password="$keypass" --alias="Freegle Ltd Chris"
      - run: cd ../iznik-nuxt-mt; cp platforms/android/app/build/outputs/apk/release/app-release.apk ../project/releases/ModTools-android-app-$MODTOOLS_VERSION-release-$(date +'%Y%m%d%H%M%S').apk
      #- run: cd ../iznik-nuxt-mt; cp platforms/android/app/build/outputs/bundle/release/app-release.aab ../project/releases/ModTools-android-app-$MODTOOLS_VERSION-release-$(date +'%Y%m%d%H%M%S').aab

      - run: ls -l releases

      # Publish to Google Play beta track. NOT WORKING since upgrade to cordova-android 10.x and new circleci build environment
      # https://haseebmajid.dev/blog/auto-publish-react-native-to-android-store-with-gitlab-ci
      - run: cd ../iznik-nuxt-app; cat platforms/android/repositories.gradle
      - run: cd ../iznik-nuxt-app; sed -i "/mavenCentral/amaven { url 'https://plugins.gradle.org/m2/' }" platforms/android/repositories.gradle
      - run: cd ../iznik-nuxt-app; cat platforms/android/repositories.gradle
      - run: cd ../iznik-nuxt-app; cat platforms/android/build.gradle
      - run: cd ../iznik-nuxt-app; sed -i "/classpath/aclasspath 'com.github.triplet.gradle:play-publisher:2.8.1'" platforms/android/build.gradle
      - run: cd ../iznik-nuxt-app; cat platforms/android/build.gradle
      - run: cd ../iznik-nuxt-app; cp ../project/mobile/build-extras.gradle platforms/android/app
      - run: cd ../iznik-nuxt-app; cp ../project/mobile/secrets/api-freegle-google-play-deployment.json platforms/android/app
      - run: cd ../iznik-nuxt-app/platforms/android; gradle publishReleaseApk || true # Ignore errors ie if versionCode already submitted

################
# UPLOAD TO GITHUB AS NEW TAGGED RELEASE
      - run:
          name: == Upload created apks as a tagged github release
          command: echo "Upload to github"
      - run: git config --local user.name "$gitusername"
      - run: git config --local user.email "$gitemail"
      - run: echo "export CIRCLECI_TAG=circleci-android-builds-fd$MOBILE_VERSION-mt$MODTOOLS_VERSION-$(date +'%Y%m%d%H%M%S')-$(git log --format=%h -1)" >> $BASH_ENV
      - run: echo $CIRCLECI_TAG
      - run: git tag $CIRCLECI_TAG

      # https://circleci.com/blog/publishing-to-github-releases-via-circleci/
      # https://github.com/tcnksm/ghr
      - run: wget https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_386.tar.gz
      - run: tar -xvzf ghr_v0.13.0_linux_386.tar.gz
      - run: ls -l ghr_v0.13.0_linux_386
      - run: chmod +x ghr_v0.13.0_linux_386/ghr

      - run: ghr_v0.13.0_linux_386/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLECI_TAG} ./releases/

################
# STORE RELEASE IN CIRCLE-CI ARTIFACTS
      - run:
          name: == Store built apks as circle-ci artifacts
          command: echo "Store as circle-ci artifacts"
      - store_artifacts:
          path: ./releases
